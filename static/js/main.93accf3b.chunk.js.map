{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","React","memo","user","className","href","TodoInfo","todo","title","completed","cn","CardActionArea","CardContent","Typography","gutterBottom","variant","component","TodoList","todos","map","getUserById","userId","usersFromServer","find","todoForUser","App","useState","setTitle","userInfo","setUserInfo","setTodos","errorTitle","setErrorTitle","errorUser","setErrorUser","onSubmit","event","preventDefault","trim","length","newUser","prevTodo","maxId","Math","max","FormControl","sx","width","TextField","fullWidth","label","type","value","onChange","currentTarget","FormHelperText","InputLabel","Select","labelId","error","target","MenuItem","Button","color","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93accf3b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nimport './UserInfo.scss';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = React.memo(\n  ({ user }) => {\n    const { email, name } = user;\n\n    return (\n      <a\n        className=\"UserInfo\"\n        href={`mailto:${email}`}\n      >\n        {name}\n      </a>\n    );\n  },\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { CardActionArea, CardContent, Typography } from '@mui/material';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = React.memo(\n  ({ todo }) => {\n    const {\n      id, title, user, completed,\n    } = todo;\n\n    return (\n      <article\n        data-id={id}\n        className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n        key={id}\n      >\n        <CardActionArea>\n          <CardContent>\n            <Typography className=\"TodoInfo__title\">\n              {title}\n            </Typography>\n\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              {user && <UserInfo user={user} />}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </article>\n    );\n  },\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport {\n  Button,\n  FormControl,\n  FormHelperText, InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  TextField, Typography,\n} from '@mui/material';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todoForUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userInfo, setUserInfo] = useState<string>('');\n  const [todos, setTodos] = useState(todoForUser);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setErrorTitle(!title.trim());\n    setErrorUser(!userInfo);\n\n    if (title.trim().length === 0 || !userInfo) {\n      return;\n    }\n\n    const newUser = getUserById(+userInfo);\n\n    setTodos(prevTodo => {\n      const maxId = Math.max(...todos.map(todo => todo.id));\n\n      return [\n        ...prevTodo,\n        {\n          id: maxId + 1,\n          title,\n          completed: false,\n          userId: newUser ? newUser.id : null,\n          user: newUser,\n        },\n      ];\n    });\n\n    setTitle('');\n    setUserInfo('');\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setErrorTitle(false);\n  };\n\n  const handleUserChange = (event: SelectChangeEvent) => {\n    setUserInfo(event.target.value);\n    setErrorUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Typography variant=\"h4\" component=\"h2\">\n        Add todo form\n      </Typography>\n\n      <form\n        className=\"form\"\n        onSubmit={handleSubmitForm}\n      >\n        <FormControl sx={{ width: '40ch' }}>\n          <div className=\"field\">\n            <TextField\n              fullWidth\n              label=\"Your task\"\n              type=\"text\"\n              id=\"title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n\n            {errorTitle && (\n              <FormHelperText\n                className=\"error\"\n              >\n                Please enter a title\n              </FormHelperText>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <FormControl fullWidth>\n              <InputLabel id=\"demo-simple-select-label\">User:</InputLabel>\n              <Select\n                labelId=\"select-label\"\n                label=\"User\"\n                value={userInfo}\n                id=\"userSelect\"\n                data-cy=\"userSelect\"\n                error={errorTitle}\n                onChange={handleUserChange}\n                fullWidth\n              >\n                {usersFromServer.map(user => (\n                  <MenuItem key={user.id} value={user.id}>{user.name}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            {errorUser && (\n              <FormHelperText\n                className=\"error\"\n              >\n                Please choose a user\n              </FormHelperText>\n            )}\n          </div>\n        </FormControl>\n\n        <Button\n          className=\"button\"\n          variant=\"contained\"\n          color=\"success\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          size=\"small\"\n        >\n          Add\n        </Button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}